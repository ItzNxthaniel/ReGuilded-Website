@page "/downloads"
@using ReGuilded.Pages.Util
@layout DownloadsLayout
@inject IStringLocalizer<ReGuildedLang> Loc;
@inject IHttpContextAccessor HttpContextAccessor

<PageTitle>@(Loc["Downloads/Page-Title"]) | ReGuilded</PageTitle>

@if (FetchedDownloads == null || FetchedDownloads.Count == 0) {
        <p>@Loc["Downloads/InternalServerError"]</p>
    } else {
        @* Add download for each platform *@
        @foreach (var fetchedDownload in FetchedDownloads) {
            <PageGridItem Title="@fetchedDownload.DisplayName" Image="fetchedDownload.Icon">
                <a class="download-page item-button" href="@fetchedDownload.DownloadUrl">@Loc["DownloadItem/Button"]</a>
            </PageGridItem>
        }
    }

@code {

    [CascadingParameter]
    public List<FetchedDownload>? FetchedDownloads { get; set; }

    protected override void OnInitialized() {
        var userAgent = HttpContextAccessor.HttpContext?.Request.Headers["User-Agent"].ToString() ;

        var platformName = userAgent.Contains("Linux") ? "linux"
                                : userAgent.Contains("Mac") ? "mac" : "windows";

        var platformDownloadIndex = FetchedDownloads.FindIndex(download => download.Platform == platformName);
        var platformDownload = FetchedDownloads[platformDownloadIndex];
        FetchedDownloads.RemoveAt(platformDownloadIndex);
        FetchedDownloads.Insert(1, platformDownload);
    }

}