@using Microsoft.Extensions.Configuration
@using Microsoft.AspNetCore.Components
@using System.Collections
@using System.Globalization
@inject NavigationManager _nav
@inject IConfiguration Configuration

<p>
    <label>
        Select your locale:
        <select @bind="Culture">
            @foreach (var culture in _supportedCultures)
            {
                <option value="@culture">@culture.DisplayName</option>
            }
        </select>
    </label>
</p>

@code
{
    private List<CultureInfo> _supportedCultures = new List<CultureInfo>();

    protected override void OnInitialized()
    {
        var supportedCultures = Configuration.GetSection("SupportedCultures").Get<string[]>();
        foreach (var supportedCulture in supportedCultures) 
        {
            _supportedCultures.Add(new CultureInfo(supportedCulture));
        }
        
            Culture = CultureInfo.CurrentCulture;
    }

    private CultureInfo Culture
    {
        get => CultureInfo.CurrentCulture;
        set {
            if (CultureInfo.CurrentCulture.Equals(value)) return;
            
            var uri = new Uri(_nav.Uri)
                .GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);
            var cultureEscaped = Uri.EscapeDataString(value.Name);
            var uriEscaped = Uri.EscapeDataString(uri);

            _nav.NavigateTo(
                $"Culture/Set?culture={cultureEscaped}&redirectUri={uriEscaped}",
                forceLoad: true);
            
        }
    }
}